name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.0)'
        required: true
        default: '1.0.0'
      include_examples:
        description: 'Include example modules in release'
        required: false
        default: false
        type: boolean

jobs:
  release:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Validate Repository Structure
      shell: pwsh
      run: .\scripts\test\validate-repository-structure.ps1

    - name: Validate PowerShell Syntax
      shell: pwsh
      run: .\scripts\test\validate-powershell-syntax.ps1

    - name: Test Module Loading
      shell: pwsh
      run: .\scripts\test\test-module-loading.ps1

    - name: Create Release Package
      shell: pwsh
      env:
        VERSION: ${{ github.event.inputs.version || '1.0.0' }}
        INCLUDE_EXAMPLES: ${{ github.event.inputs.include_examples }}
      run: |
        # Force refresh - using environment variables instead of parameters
        .\scripts\build\create-release-package.ps1

    - name: Create Release Archive
      shell: pwsh
      run: .\scripts\build\create-release-archive.ps1 -Version "${{ github.event.inputs.version || '1.0.0' }}"

    - name: Upload Release Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: release-v${{ github.event.inputs.version || '1.0.0' }}
        path: |
          release-v${{ github.event.inputs.version || '1.0.0' }}/
          powershell-profile-manager-v${{ github.event.inputs.version || '1.0.0' }}.zip
        retention-days: 30

    - name: Generate Release Body
      shell: pwsh
      run: .\scripts\build\prepare-release-body.ps1 -Version "${{ github.event.inputs.version || '1.0.0' }}"

    - name: Create GitHub Release
      if: startsWith(github.ref, 'refs/tags/')
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: PowerShell Profile Manager ${{ github.event.inputs.version || '1.0.0' }}
        body_path: release-body.md
        draft: false
        prerelease: false

    - name: Upload Release Asset
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./powershell-profile-manager-v${{ github.event.inputs.version || '1.0.0' }}.zip
        asset_name: powershell-profile-manager-v${{ github.event.inputs.version || '1.0.0' }}.zip
        asset_content_type: application/zip
