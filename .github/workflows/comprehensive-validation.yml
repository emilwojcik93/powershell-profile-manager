name: Comprehensive Script and YAML Validation

on:
  push:
    branches: [ main, develop ]
    paths:
      - '**/*.ps1'
      - '**/*.psm1'
      - '**/*.psd1'
      - '**/*.yml'
      - '**/*.yaml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - '**/*.ps1'
      - '**/*.psm1'
      - '**/*.psd1'
      - '**/*.yml'
      - '**/*.yaml'

env:
  DEV_TEAM_EMAIL: ${{ vars.DEV_TEAM_EMAIL || 'dev-team@company.com' }}
  REPO_ADMINS: ${{ vars.REPO_ADMINS || 'dev-team@company.com' }}

jobs:
  validate-scripts-and-yaml:
    runs-on: windows-latest
    name: Validate PowerShell Scripts and YAML Files
    continue-on-error: true

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup PowerShell and Install Modules
      shell: pwsh
      run: |
        Set-PSRepository -Name PSGallery -InstallationPolicy Trusted
        Install-Module -Name PSScriptAnalyzer -Force -Scope CurrentUser
        Install-Module -Name Pester -Force -Scope CurrentUser -SkipPublisherCheck
        Install-Module -Name powershell-yaml -Force -Scope CurrentUser

    - name: Run PowerShell Script Validation
      shell: pwsh
      id: ps-validation
      continue-on-error: true
      run: |
        .\scripts\workflows\run-comprehensive-validation.ps1 -EventName "${{ github.event_name }}" -BaseRef "${{ github.base_ref }}"

    - name: Upload Validation Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: comprehensive-validation-results-${{ github.run_id }}
        path: validation-results/
        retention-days: 30

    - name: Generate Combined Summary Report
      shell: pwsh
      run: |
        $outputDir = ".\validation-results"
        $combinedSummary = @{
          Repository = "${{ github.repository }}"
          Branch = "${{ github.ref_name }}"
          EventType = "${{ github.event_name }}"
          Author = "${{ github.actor }}"
          Commit = "${{ github.sha }}"
          Timestamp = (Get-Date -Format "yyyy-MM-dd HH:mm:ss UTC")
          PowerShell = @{
            ChangedFiles = "${{ steps.ps-validation.outputs.ps-changed-files }}"
            Critical = ${{ steps.ps-validation.outputs.ps-critical-errors }}
            High = ${{ steps.ps-validation.outputs.ps-high-errors }}
            Total = ${{ steps.ps-validation.outputs.ps-total-issues }}
          }
          YAML = @{
            ChangedFiles = "${{ steps.ps-validation.outputs.yaml-changed-files }}"
            Critical = ${{ steps.ps-validation.outputs.yaml-critical-errors }}
            High = ${{ steps.ps-validation.outputs.yaml-high-errors }}
            Total = ${{ steps.ps-validation.outputs.yaml-total-issues }}
          }
          Combined = @{
            TotalCritical = ${{ steps.ps-validation.outputs.ps-critical-errors }} + ${{ steps.ps-validation.outputs.yaml-critical-errors }}
            TotalHigh = ${{ steps.ps-validation.outputs.ps-high-errors }} + ${{ steps.ps-validation.outputs.yaml-high-errors }}
            TotalIssues = ${{ steps.ps-validation.outputs.ps-total-issues }} + ${{ steps.ps-validation.outputs.yaml-total-issues }}
          }
          WorkflowRun = "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        }

        $combinedSummary | ConvertTo-Json -Depth 10 | Out-File "$outputDir\combined-validation-summary.json" -Encoding UTF8

        # Set combined outputs
        $totalCritical = ${{ steps.ps-validation.outputs.ps-critical-errors }} + ${{ steps.ps-validation.outputs.yaml-critical-errors }}
        $totalHigh = ${{ steps.ps-validation.outputs.ps-high-errors }} + ${{ steps.ps-validation.outputs.yaml-high-errors }}
        $totalIssues = ${{ steps.ps-validation.outputs.ps-total-issues }} + ${{ steps.ps-validation.outputs.yaml-total-issues }}

        echo "total-critical-errors=$totalCritical" >> $env:GITHUB_OUTPUT
        echo "total-high-errors=$totalHigh" >> $env:GITHUB_OUTPUT
        echo "total-issues=$totalIssues" >> $env:GITHUB_OUTPUT

    - name: Process PR Comment Template
      if: github.event_name == 'pull_request' && (steps.ps-validation.outputs.ps-total-issues > 0 || steps.ps-validation.outputs.yaml-total-issues > 0 || steps.ps-validation.outputs.ps-changed-files != '' || steps.ps-validation.outputs.yaml-changed-files != '')
      shell: pwsh
      run: |
        .\scripts\tools\process-template.ps1 -TemplatePath "templates\markdown\pr-comment-template.md" -OutputPath "validation-results\pr-comment.md" -Variables @{
          statusIcon = if (${{ steps.ps-validation.outputs.ps-critical-errors }} + ${{ steps.ps-validation.outputs.yaml-critical-errors }} -gt 0) { '[CRITICAL]' } elseif (${{ steps.ps-validation.outputs.ps-high-errors }} + ${{ steps.ps-validation.outputs.yaml-high-errors }} -gt 0) { '[WARNING]' } else { '[OK]' }
          totalCritical = ${{ steps.ps-validation.outputs.ps-critical-errors }} + ${{ steps.ps-validation.outputs.yaml-critical-errors }}
          psCriticalErrors = ${{ steps.ps-validation.outputs.ps-critical-errors }}
          yamlCriticalErrors = ${{ steps.ps-validation.outputs.yaml-critical-errors }}
          totalHigh = ${{ steps.ps-validation.outputs.ps-high-errors }} + ${{ steps.ps-validation.outputs.yaml-high-errors }}
          psHighErrors = ${{ steps.ps-validation.outputs.ps-high-errors }}
          yamlHighErrors = ${{ steps.ps-validation.outputs.yaml-high-errors }}
          totalIssues = ${{ steps.ps-validation.outputs.ps-total-issues }} + ${{ steps.ps-validation.outputs.yaml-total-issues }}
          psTotalIssues = ${{ steps.ps-validation.outputs.ps-total-issues }}
          yamlTotalIssues = ${{ steps.ps-validation.outputs.yaml-total-issues }}
          statusMessage = if (${{ steps.ps-validation.outputs.ps-critical-errors }} + ${{ steps.ps-validation.outputs.yaml-critical-errors }} -gt 0) { 'Critical errors detected - please review immediately.' } elseif (${{ steps.ps-validation.outputs.ps-high-errors }} + ${{ steps.ps-validation.outputs.yaml-high-errors }} -gt 0) { 'High priority issues detected - please review.' } else { 'Minor issues detected - consider addressing for better code quality.' }
          psChangedFilesList = if ('${{ steps.ps-validation.outputs.ps-changed-files }}') { ('${{ steps.ps-validation.outputs.ps-changed-files }}' -split ',' | ForEach-Object { "- $_" }) -join "`n" } else { "- No PowerShell files changed" }
          yamlChangedFilesList = if ('${{ steps.ps-validation.outputs.yaml-changed-files }}') { ('${{ steps.ps-validation.outputs.yaml-changed-files }}' -split ',' | ForEach-Object { "- $_" }) -join "`n" } else { "- No YAML files changed" }
          recommendations = if (${{ steps.ps-validation.outputs.ps-critical-errors }} + ${{ steps.ps-validation.outputs.yaml-critical-errors }} -gt 0) { '[CRITICAL] **Priority 1**: Address critical errors to ensure script functionality' } elseif (${{ steps.ps-validation.outputs.ps-high-errors }} + ${{ steps.ps-validation.outputs.yaml-high-errors }} -gt 0) { '[WARNING] **Priority 2**: Review high priority issues for best practices compliance' } else { '[OK] **Great job!** No issues detected in your scripts and YAML files.' }
          workflowRunUrl = "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          powerShellBestPracticesUrl = "https://docs.microsoft.com/en-us/powershell/scripting/developer/cmdlet/cmdlet-overview"
          runId = "${{ github.run_id }}"
        }

    - name: Comment on PR (Any Issues Found)
      if: github.event_name == 'pull_request' && (steps.ps-validation.outputs.ps-total-issues > 0 || steps.ps-validation.outputs.yaml-total-issues > 0 || steps.ps-validation.outputs.ps-changed-files != '' || steps.ps-validation.outputs.yaml-changed-files != '')
      uses: actions/github-script@v7
      with:
        script: |
          const comment = require('fs').readFileSync('validation-results/pr-comment.md', 'utf8');
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });

    - name: Log Critical Errors (Commit)
      if: github.event_name == 'push' && (steps.ps-validation.outputs.ps-critical-errors > 0 || steps.ps-validation.outputs.yaml-critical-errors > 0)
      shell: pwsh
      run: |
        Write-Host "Critical errors detected in commit:" -ForegroundColor Red
        Write-Host "  - PowerShell Critical Errors: ${{ steps.ps-validation.outputs.ps-critical-errors }}" -ForegroundColor Red
        Write-Host "  - YAML Critical Errors: ${{ steps.ps-validation.outputs.yaml-critical-errors }}" -ForegroundColor Red
        Write-Host "  - Workflow Run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" -ForegroundColor Cyan
        Write-Host "  - Commit: ${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}" -ForegroundColor Cyan
        Write-Host "Note: GitHub will automatically send workflow failure notifications via email" -ForegroundColor Yellow

    - name: Log High Priority Issues (PR)
      if: github.event_name == 'pull_request' && (steps.ps-validation.outputs.ps-high-errors > 0 || steps.ps-validation.outputs.yaml-high-errors > 0)
      shell: pwsh
      run: |
        Write-Host "High priority issues detected in PR:" -ForegroundColor Yellow
        Write-Host "  - PowerShell High Errors: ${{ steps.ps-validation.outputs.ps-high-errors }}" -ForegroundColor Yellow
        Write-Host "  - YAML High Errors: ${{ steps.ps-validation.outputs.yaml-high-errors }}" -ForegroundColor Yellow
        Write-Host "  - PR: ${{ github.event.pull_request.html_url }}" -ForegroundColor Cyan
        Write-Host "  - Workflow Run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" -ForegroundColor Cyan
        Write-Host "Note: GitHub will automatically send workflow notifications via email" -ForegroundColor Yellow

    - name: Validation Complete
      shell: pwsh
      run: |
        Write-Host "Comprehensive Script and YAML Validation Workflow Completed Successfully" -ForegroundColor Green
        Write-Host "PowerShell Critical Errors: ${{ steps.ps-validation.outputs.ps-critical-errors }}" -ForegroundColor $(if (${{ steps.ps-validation.outputs.ps-critical-errors }} -gt 0) { 'Red' } else { 'Green' })
        Write-Host "PowerShell High Priority Issues: ${{ steps.ps-validation.outputs.ps-high-errors }}" -ForegroundColor $(if (${{ steps.ps-validation.outputs.ps-high-errors }} -gt 0) { 'Yellow' } else { 'Green' })
        Write-Host "PowerShell Total Issues: ${{ steps.ps-validation.outputs.ps-total-issues }}" -ForegroundColor $(if (${{ steps.ps-validation.outputs.ps-total-issues }} -gt 0) { 'Yellow' } else { 'Green' })
        Write-Host "YAML Critical Errors: ${{ steps.ps-validation.outputs.yaml-critical-errors }}" -ForegroundColor $(if (${{ steps.ps-validation.outputs.yaml-critical-errors }} -gt 0) { 'Red' } else { 'Green' })
        Write-Host "YAML High Priority Issues: ${{ steps.ps-validation.outputs.yaml-high-errors }}" -ForegroundColor $(if (${{ steps.ps-validation.outputs.yaml-high-errors }} -gt 0) { 'Yellow' } else { 'Green' })
        Write-Host "YAML Total Issues: ${{ steps.ps-validation.outputs.yaml-total-issues }}" -ForegroundColor $(if (${{ steps.ps-validation.outputs.yaml-total-issues }} -gt 0) { 'Yellow' } else { 'Green' })
        Write-Host ""
        Write-Host "This workflow provides informational feedback and does not block PR merges." -ForegroundColor Cyan
        Write-Host "GitHub automatically sends workflow notifications via email." -ForegroundColor Cyan
        Write-Host "Detailed reports available as workflow artifacts for 30 days." -ForegroundColor Cyan