name: PowerShell Script Validator

on:
  push:
    branches: [ main, develop ]
    paths:
      - '**/*.ps1'
      - '**/*.psm1'
      - '**/*.psd1'
  pull_request:
    branches: [ main, develop ]
    paths:
      - '**/*.ps1'
      - '**/*.psm1'
      - '**/*.psd1'
  workflow_dispatch:

env:
  DEV_TEAM_EMAIL: ${{ vars.DEV_TEAM_EMAIL || 'dev-team@company.com' }}
  REPO_ADMINS: ${{ vars.REPO_ADMINS || 'dev-team@company.com' }}

jobs:
  validate-powershell:
    runs-on: windows-latest
    name: Validate PowerShell Scripts
    continue-on-error: true

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup PowerShell
      shell: pwsh
      run: |
        Set-PSRepository -Name PSGallery -InstallationPolicy Trusted
        Install-Module -Name PSScriptAnalyzer -Force -Scope CurrentUser
        Install-Module -Name Pester -Force -Scope CurrentUser -SkipPublisherCheck

    - name: Run PowerShell Script Validation
      shell: pwsh
      id: validation
      continue-on-error: true
      run: |
        .\scripts\workflows\run-powershell-validation.ps1 -EventName "${{ github.event_name }}" -BaseRef "${{ github.base_ref }}"

    - name: Upload Validation Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: validation-results-${{ github.run_id }}
        path: validation-results/
        retention-days: 30

    - name: Generate PR Comment
      if: github.event_name == 'pull_request' && (steps.validation.outputs.total-issues > 0 || steps.validation.outputs.changed-files != '')
      shell: pwsh
      run: |
        .\scripts\workflows\generate-pr-comment.ps1 -CriticalErrors ${{ steps.validation.outputs.critical-errors }} -HighErrors ${{ steps.validation.outputs.high-errors }} -TotalIssues ${{ steps.validation.outputs.total-issues }} -ChangedFiles '${{ steps.validation.outputs.changed-files }}' -RunId '${{ github.run_id }}' -Repository '${{ github.repository }}'

    - name: Comment on PR
      if: github.event_name == 'pull_request' && (steps.validation.outputs.total-issues > 0 || steps.validation.outputs.changed-files != '')
      uses: actions/github-script@v7
      with:
        script: |
          const comment = require('fs').readFileSync('validation-results/pr-comment.md', 'utf8');
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });

    - name: Log Critical Errors (Commit)
      if: github.event_name == 'push' && steps.validation.outputs.critical-errors > 0
      shell: pwsh
      run: |
        .\scripts\workflows\log-validation-results.ps1 -EventType "commit" -CriticalErrors ${{ steps.validation.outputs.critical-errors }} -WorkflowRunUrl "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" -CommitUrl "${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}"

    - name: Log High Priority Issues (PR)
      if: github.event_name == 'pull_request' && steps.validation.outputs.high-errors > 0
      shell: pwsh
      run: |
        .\scripts\workflows\log-validation-results.ps1 -EventType "pr" -HighErrors ${{ steps.validation.outputs.high-errors }} -WorkflowRunUrl "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" -PrUrl "${{ github.event.pull_request.html_url }}"

    - name: Validation Complete
      shell: pwsh
      run: |
        Write-Host "PowerShell Script Validation Workflow Completed Successfully" -ForegroundColor Green
        Write-Host "Critical Errors: ${{ steps.validation.outputs.critical-errors }}" -ForegroundColor $(if (${{ steps.validation.outputs.critical-errors }} -gt 0) { 'Red' } else { 'Green' })
        Write-Host "High Priority Issues: ${{ steps.validation.outputs.high-errors }}" -ForegroundColor $(if (${{ steps.validation.outputs.high-errors }} -gt 0) { 'Yellow' } else { 'Green' })
        Write-Host "Total Issues: ${{ steps.validation.outputs.total-issues }}" -ForegroundColor $(if (${{ steps.validation.outputs.total-issues }} -gt 0) { 'Yellow' } else { 'Green' })
        Write-Host ""
        Write-Host "This workflow provides informational feedback and does not block PR merges." -ForegroundColor Cyan
        Write-Host "GitHub automatically sends workflow notifications via email." -ForegroundColor Cyan
        Write-Host "Detailed reports available as workflow artifacts for 30 days." -ForegroundColor Cyan